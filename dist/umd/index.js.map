{"version":3,"file":"index.js","sources":["../../src/lib/Surface.ts","../../src/lib/utils.ts","../../src/lib/FrictionDOM.ts","../../src/lib/SurfaceObject.ts"],"sourcesContent":["import { Coordinate } from \"./types\";\nimport { SurfaceObject } from \"./SurfaceObject\";\n\ntype SurfacePadding = number | (() => number);\n\ntype SurfaceOptions = {\n  /**\n   * The number of px that represent 1 meter\n   */\n  scale: number,\n  /**\n   * Spring constant in N/m\n   */\n  boundarySpring: number,\n  /**\n   * N/meters/sec damping coefficient\n   */\n  boundarySpringDamping: number,\n  /**\n   * Spring constant N/m\n   */\n  boundaryPullSpring: number,\n  /**\n   * Percentage of overshoot for programtic animations\n   */\n  overshoot: number,\n  paddingMinX: SurfacePadding,\n  paddingMinY: SurfacePadding,\n  paddingMaxX: SurfacePadding,\n  paddingMaxY: SurfacePadding,\n};\n\ntype SurfaceBounds = typeof window | HTMLElement | Array<Coordinate> | string;\n\nexport class Surface {\n  element: SurfaceBounds;\n  surfaceObjects: Array<SurfaceObject>;\n  resizeTimeout: ReturnType<typeof setTimeout>;\n  options: SurfaceOptions;\n\n  minX: number;\n  maxX: number;\n  minY: number;\n  maxY: number;\n\n  constructor(element: SurfaceBounds, options: Partial<SurfaceOptions>) {\n    this.element = typeof(element) === 'string' ? document.getElementById(element) : element;\n    this.surfaceObjects = [];\n    this.resizeTimeout;\n\n    this.options = {\n      scale: 526,\n      boundarySpring: 0.16,\n      boundarySpringDamping: 5,\n      boundaryPullSpring: 0.08,\n      overshoot: 0,\n      paddingMinX: 0,\n      paddingMinY: 0,\n      paddingMaxX: 0,\n      paddingMaxY: 0,\n      ...(options || {}), // allow overriding defaults\n    }\n\n    this.setEdges();\n\n    window.addEventListener('resize', this.resizeListener.bind(this));\n  }\n\n  resizeListener(): void {\n    clearTimeout(this.resizeTimeout);\n    this.resizeTimeout = setTimeout(() => {\n      this.setEdges();\n    }, 500);\n  }\n\n  parsePadding(padding: SurfacePadding): number {\n    if (typeof(padding) === 'function') return padding();\n    return padding;\n  }\n\n  setEdges(): void {\n    const { paddingMinX, paddingMinY, paddingMaxX, paddingMaxY } = this.options;\n\n    if (Array.isArray(this.element)) {\n      this.minX = this.element[0].x;\n      this.minY = this.element[0].y;\n      this.maxX = this.element[1].x;\n      this.maxY = this.element[1].y;\n    } else {\n      this.minX = 0;\n      this.minY = 0;\n\n      if (this.element === window) {\n        this.maxX = window.innerWidth;\n        this.maxY = window.innerHeight;\n      } else if (this.element instanceof HTMLElement) {\n        this.maxX = this.element.offsetWidth;\n        this.maxY = this.element.offsetHeight;\n      }\n    }\n\n    this.minX += this.parsePadding(paddingMinX);\n    this.minY += this.parsePadding(paddingMinY);\n    this.maxX -= this.parsePadding(paddingMaxX);\n    this.maxY -= this.parsePadding(paddingMaxY);\n\n    this.surfaceObjects.forEach(obj => {\n      obj.goto(obj.closestSettlePoint(), 0, false, true);\n    });\n  }\n}\n","/**\n * meters/sec/sec\n */\nexport const gravity: number = 9.8;\n\nexport function toMeters(px: number, scale: number): number { return px / scale };\nexport function toPixels(meters: number, scale: number): number { return meters * scale };\nexport function toSeconds(milli: number): number { return milli / 1000 };\n","import type {AppTouchEvent, Coordinate} from './types';\nimport { SurfaceObject } from './SurfaceObject';\nimport {toSeconds} from './utils';\n\n\nexport class FrictionDOM {\n  cursor: Coordinate;\n  cursorLast: Coordinate;\n\n  rafStart: number;\n  rafLast: number;\n  raf: ReturnType<typeof setInterval>;\n\n  draggingSurfaceObjects: Array<SurfaceObject>;\n  activeSurfaceObjects: Array<SurfaceObject>;\n  surfaceObjects: Array<SurfaceObject>;\n  moveCount: number;\n\n  constructor() {\n    this.moveCount = 0;\n    this.cursor = {x: 0, y: 0};\n    this.cursorLast = {...this.cursor};\n\n    this.rafStart = undefined;\n    this.rafLast = undefined;\n    this.raf = undefined;\n\n    this.draggingSurfaceObjects = [];\n    this.activeSurfaceObjects = [];\n    this.surfaceObjects = [];\n\n    document.addEventListener('mousemove', this.move.bind(this));\n    document.addEventListener('touchmove', this.move.bind(this));\n\n    document.addEventListener('mouseup', this.endMove.bind(this));\n    document.addEventListener('touchend', this.endMove.bind(this));\n  }\n\n  addActiveSurfaceObject(obj: SurfaceObject): void {\n    const found = this.activeSurfaceObjects.indexOf(obj) > -1;\n    if (!found) this.activeSurfaceObjects.push(obj);\n  }\n\n  addDraggingSurfaceObjects(obj: SurfaceObject): void {\n    const found = this.draggingSurfaceObjects.indexOf(obj) > -1;\n    if (!found) this.draggingSurfaceObjects.push(obj);\n  }\n\n  beginMotion(withObject?: SurfaceObject): void {\n    this.rafStart = toSeconds(performance.now());\n    this.rafLast = toSeconds(performance.now());\n\n    withObject && this.addActiveSurfaceObject(withObject);\n\n    window.cancelAnimationFrame(this.raf);\n    this.raf = window.requestAnimationFrame(this.updateMotion.bind(this));\n  }\n\n  updateMotion(): void {\n    if (this.activeSurfaceObjects.length === 0) return;\n\n    const time = toSeconds(performance.now());\n    const timeDelta = time - this.rafLast;\n\n    for (let i = this.activeSurfaceObjects.length - 1; i >= 0; i--) {\n      this.activeSurfaceObjects[i].updateMotion(timeDelta);\n      if (this.activeSurfaceObjects[i].settled) {\n        this.activeSurfaceObjects.splice(i, 1);\n      }\n    }\n\n    this.cursorLast.x = this.cursor.x;\n    this.cursorLast.y = this.cursor.y;\n\n    this.rafLast = time;\n    this.raf = window.requestAnimationFrame(this.updateMotion.bind(this))\n  }\n\n  startMove(preventDefault: boolean, event: AppTouchEvent | MouseEvent, surfaceObject: SurfaceObject): void {\n    if (preventDefault) event.preventDefault();\n\n    this.addDraggingSurfaceObjects(surfaceObject);\n    this.addActiveSurfaceObject(surfaceObject);\n\n    if ((event as AppTouchEvent).targetTouches) {\n      this.cursor.x = undefined;\n      this.cursor.y = undefined;\n      this.cursorLast.x = undefined;\n      this.cursorLast.y = undefined;\n    } else {\n      this.cursorLast.x = this.cursor.x;\n      this.cursorLast.y = this.cursor.y;\n    }\n\n    this.beginMotion();\n  }\n\n  move(event: AppTouchEvent | MouseEvent): void {\n    this.moveCount++;\n\n    if ((event as AppTouchEvent).targetTouches) {\n      const {screenX, screenY} = (event as AppTouchEvent).targetTouches[0];\n      this.cursor.x = screenX;\n      this.cursor.y = screenY;\n    } else {\n      this.cursor.x = (event as MouseEvent).clientX;\n      this.cursor.y = (event as MouseEvent).clientY;\n    }\n  }\n\n  endMove(_: AppTouchEvent | MouseEvent, forScrolling: boolean): void {\n    for (let i = this.draggingSurfaceObjects.length - 1; i >= 0; i--) {\n      const simulateClick: boolean = !forScrolling && this.moveCount < 5;\n      this.draggingSurfaceObjects[i].endMove(simulateClick);\n      this.draggingSurfaceObjects.splice(i, 0);\n    }\n\n    this.moveCount = 0;\n  }\n}\n\n// this is an internal export\nexport const app = new FrictionDOM();\n","import type { AppTouchEvent, Coordinate } from './types';\nimport {app} from './FrictionDOM';\nimport {toMeters, toPixels, gravity} from './utils';\nimport { Surface } from './Surface';\n\ntype Axis = 'x' | 'y';\ntype Boundary = 'x-min' | 'x-max' | 'y-min' | 'y-max';\n\ntype SurfaceObjectOptions = {\n  /**\n   * kg\n   */\n  mass: number,\n  friction: number,\n  axis: Axis | Array<Axis>,\n  xProp: string,\n  yProp: string,\n  contained: boolean,\n  /**\n   * At what threshold should we nudge the object to an edge\n   */\n  nudgeThreshold: number,\n  initialPosition: Boundary | Array<Boundary>,\n};\n\ntype AxisState = {\n  /**\n   * meters/sec/sec\n   */\n  acceleration: number,\n  /**\n   * meters/sec \n   */\n  velocity: number,\n  /**\n   * Relative position in pixels\n   */\n  position: number,\n  settled: boolean,\n  hittingMin: boolean,\n  hittingMax: boolean,\n  previousDisplacements: Array<number>,\n};\n\ntype BoundaryCallbacks = {\n  'x-min': Array<((() => void))>,\n  'x-max': Array<((() => void))>,\n  'y-min': Array<((() => void))>,\n  'y-max': Array<((() => void))>,\n}\n\ntype PositionDetails = {\n  /**\n   * x position as absolute pixels\n   */\n  x: number,\n  /**\n   * y position as absolute pixels\n   */\n  y: number,\n  /**\n   * x position as percentage of complete range of motion\n   */\n  xp: number,\n  /**\n   * y position as percentage of complete range of motion\n   */\n  yp: number,\n}\n\ntype GoToInfo = {\n  /**\n   * x velocity in m/s\n   */\n  x: number,\n  /**\n   * y velocity in m/s\n   */\n  y: number,\n}\n\nexport class SurfaceObject {\n  element: HTMLElement;\n  surface: Surface;\n  options: SurfaceObjectOptions;\n  x: AxisState;\n  y: AxisState;\n  currentEvent: AppTouchEvent | MouseEvent;\n  currentScrollLock: boolean;\n  currentScrollLockElement: HTMLElement;\n  currentScrollLockStyle: string;\n\n  boundaryCallbacks: BoundaryCallbacks;\n  positionCallbacks: Array<((details: PositionDetails) => void)>; // fill out\n\n  _dragging: boolean;\n\n  constructor(element: HTMLElement | string, surface: Surface, options: Partial<SurfaceObjectOptions>) {\n    app.surfaceObjects.push(this);\n\n    this.positionCallbacks = [];\n\n    this.surface = surface;\n    this.surface.surfaceObjects.push(this);\n\n    this.element = typeof(element) === 'string' ? document.getElementById(element) : element;\n    this.element.style.position = surface.element === window ? 'fixed' : 'relative';\n\n    this.options = {\n      mass: 0.17,\n      friction: 0.15, // kinetic friction of rubber and ice\n      axis: ['x', 'y'],\n      xProp: 'left',\n      yProp: 'top',\n      contained: true,\n      nudgeThreshold: 0,\n      initialPosition: ['x-min', 'y-min'],\n      ...(options || {}),\n    }\n\n    const axisState: AxisState = {\n      acceleration: 0,\n      velocity: 0,\n      position: 0,\n      settled: true,\n      hittingMin: false,\n      hittingMax: false,\n      previousDisplacements: [],\n    }\n\n    this.x = {...axisState};\n    this.y = {...axisState};\n\n    this.positionx = this.x.position + this.minEdge.x;\n    this.positiony = this.y.position + this.minEdge.y;\n\n    this.dragging = false;\n\n    this.element.addEventListener('mousedown', this.startMove.bind(this), {capture: true, passive: false});\n    this.element.addEventListener('touchstart', this.startMove.bind(this), {capture: true, passive: false});\n\n    this.boundaryCallbacks = {\n      'x-min': [],\n      'x-max': [],\n      'y-min': [],\n      'y-max': [],\n    };\n\n    this.goto(this.options.initialPosition, 0, false, true);\n  }\n\n  get minEdge(): Coordinate {\n    return {\n      x: this.surface.minX,\n      y: this.surface.minY,\n    };\n  }\n\n  get maxEdge(): Coordinate {\n    const { contained } = this.options;\n\n    return {\n      x: this.surface.maxX - (contained ? this.element.offsetWidth : 0),\n      y: this.surface.maxY - (contained ? this.element.offsetHeight : 0),\n    };\n  }\n\n  get dragging(): boolean { return this._dragging; }\n  set dragging(d: boolean) { this._dragging = d; }\n\n  get positionx(): number { return this.x.position; }\n  set positionx(p: number) { this.x.position = p; this.element.style[this.options.xProp] = p + 'px'; this.callPositionCallbacks(); }\n\n  get positiony(): number { return this.y.position; }\n  set positiony(p: number) { this.y.position = p; this.element.style[this.options.yProp] = p + 'px'; this.callPositionCallbacks(); }\n\n  get settled(): boolean { return this.x.settled && this.y.settled; }\n\n  get axis(): Array<Axis> {\n    return Array.isArray(this.options.axis) ? this.options.axis : [this.options.axis];\n  }\n\n  resetAxis(axis: Axis): void {\n    this[axis].settled = false;\n    this[axis].hittingMin = false;\n    this[axis].hittingMax = false;\n    this[axis].previousDisplacements = [];\n  }\n\n  startMove(event: TouchEvent | MouseEvent): void {\n    const target: HTMLElement = event.target as HTMLElement;\n\n    let curr: HTMLElement = target;\n    while (this.element.contains(curr)) {\n      const overflowY: string = window.getComputedStyle(curr).getPropertyValue('overflow-y');\n      if (curr.offsetHeight !== curr.scrollHeight && overflowY !== 'hidden') {\n        this.currentScrollLockStyle = overflowY;\n        this.currentScrollLockElement = curr;\n        this.currentScrollLock= true;\n      }\n\n      curr = curr.parentElement;\n    }\n\n    this.currentEvent = event;\n\n    app.startMove(!this.currentScrollLock, event, this);\n\n    this.axis.forEach(axis => {\n      this.resetAxis(axis);\n    });\n\n    this.dragging = true;\n  }\n\n  closestSettlePoint(): Array<Boundary> {\n    const settlePoints = [];\n    this.axis.forEach(axis => {\n      const { position } = this[axis];\n      const delta = this.maxEdge[axis] - this.minEdge[axis];\n      const percentage = (position - this.minEdge[axis]) / delta;\n      if (position < this.minEdge[axis] || percentage <= 0.5) {\n        settlePoints.push(`${axis}-min`);\n      }\n\n      if (position > this.maxEdge[axis] || percentage > 0.5) {\n        settlePoints.push(`${axis}-max`);\n      }\n    });\n\n    return settlePoints;\n  }\n\n  endMove(performEvent: boolean): void {\n    if (this.currentScrollLockElement) {\n      this.currentScrollLockElement.style.overflowY = this.currentScrollLockStyle;\n      this.currentScrollLockStyle = null;\n      this.currentScrollLockElement = null;\n      this.currentScrollLock = false;\n    }\n\n    if (this.currentEvent && performEvent) {\n      const el: HTMLElement = this.currentEvent.target as HTMLElement;\n      el.click();\n    }\n\n    this.currentEvent = null;\n\n    const { nudgeThreshold } = this.options;\n    this.dragging = false;\n\n    this.axis.forEach(axis => {\n      const { position, velocity } = this[axis];\n      const minDiff = position - this.minEdge[axis];\n      const maxDiff = this.maxEdge[axis] - position;\n\n      let outOfBounds = false;\n      if (velocity === 0 && minDiff < 0) { this[axis].velocity = -0.01; outOfBounds = true; }\n      if (velocity === 0 && maxDiff < 0) { this[axis].velocity = 0.01; outOfBounds = true; }\n      if (nudgeThreshold === 0 || outOfBounds) return; // if we are allowed to float don't worry about anything else!\n\n      const dir = velocity > 0 ? 'max' : 'min';\n      const info = {\n        min: this.goto(`${axis}-min`, 0, true),\n        max: this.goto(`${axis}-max`, 0, true),\n      };\n\n      if (Math.abs(velocity) < Math.abs(info[dir][axis])) {\n        let positionPercentage = ((this[axis].position - this.minEdge[axis]) / (this.maxEdge[axis] - this.minEdge[axis])) * 100;\n        // this is not working properly, we need to know which edge the item started \n        // closest to in order to know which to snap back to\n        const closestEdge = positionPercentage > 50 ? 'max' : 'min';\n        const opClosestEdge = positionPercentage <= 50 ? 'max' : 'min';\n        positionPercentage = positionPercentage > 50 ? 100 - positionPercentage : positionPercentage;\n        this[axis].velocity = info[positionPercentage < nudgeThreshold ? closestEdge : opClosestEdge][axis];\n      }\n    });\n\n    if (this.x.velocity === 0) this.x.settled = true;\n    if (this.y.velocity === 0) this.y.settled = true;\n  }\n\n  goto(boundary: Boundary | Array<Boundary>, overshootOverride?: number, justInfo?: boolean, instant?: boolean): void | GoToInfo {\n    const instructions = {};\n    const info: GoToInfo = {x: null, y: null};\n\n    boundary = Array.isArray(boundary) ? boundary : [boundary]\n\n    boundary.forEach(d => {\n      const [axis, dir] = d.split('-');\n      instructions[axis] = dir;\n    });\n\n    const { friction, mass } = this.options;\n    let { scale, overshoot } = this.surface.options;\n    if (overshootOverride !== undefined) overshoot = overshootOverride;\n    const frictionForce = friction * (mass * gravity);\n\n    const positionParts = new Map();\n    this.axis.forEach(axis => {\n      const instruction = instructions[axis];\n      if (!instruction) return;\n      positionParts.set(axis, toMeters((instruction === 'max' ? this.maxEdge[axis] : this.minEdge[axis]) - this[axis].position, scale));\n    });\n\n    this.axis.forEach(axis => {\n      const instruction = instructions[axis];\n      if (!instruction) return;\n\n      const otherAxis = axis === 'y' ? 'x' : 'y';\n      let positionDelta = positionParts.get(axis);\n      let otherPositionDelta = positionParts.get(otherAxis);\n\n      let frictionMultiplier = 1;\n      if (otherPositionDelta) {\n        frictionMultiplier = Math.abs(positionDelta)/(Math.abs(otherPositionDelta) + Math.abs(positionDelta));\n      }\n\n      if (positionDelta === 0) return;\n      positionDelta *= (1 + ((overshoot) / 100))\n\n      info[axis] = Math.sqrt(2 * ((frictionForce * frictionMultiplier) / mass) * Math.abs(positionDelta));\n      info[axis] *= positionDelta >= 0 ? 1 : -1;\n\n      if (!justInfo) {\n        this.resetAxis(axis);\n\n        if (instant) {\n          this[axis].position += toPixels(positionDelta, scale);\n          this[axis].velocity = 0\n        } else {\n          this[axis].velocity = info[axis];\n        }\n      }\n    });\n\n    if (justInfo) return info;\n    if (!this.x.settled || !this.y.settled) app.beginMotion(this);\n  }\n\n  updateMotion(timeDelta: number): void {\n    const { friction, mass } = this.options;\n    const { scale } = this.surface.options;\n\n    const axisCoefficients = {\n      x: (Math.abs(this.x.velocity)/(Math.abs(this.y.velocity) + Math.abs(this.x.velocity))),\n      y: (Math.abs(this.y.velocity)/(Math.abs(this.y.velocity) + Math.abs(this.x.velocity))),\n    };\n\n    let cancelMotion: boolean = false;\n\n    this.axis.forEach(axis => {\n      if (this.dragging) {\n        let pullCoefficient = 1;\n        if (this[axis].position < this.minEdge[axis] || this[axis].position > this.maxEdge[axis]) {\n          pullCoefficient = this.surface.options.boundaryPullSpring<= this.surface.options.boundarySpring\n            ? (this.surface.options.boundaryPullSpring / this.surface.options.boundarySpring) / 2\n            : 1 - ((this.surface.options.boundarySpring / this.surface.options.boundaryPullSpring) / 2);\n        }\n\n        const positionDelta = pullCoefficient * (app.cursor[axis] === undefined || app.cursorLast[axis] === undefined ? 0 : app.cursor[axis] - app.cursorLast[axis]);\n\n        // TODO: make this work for both axis\n        if (axis === 'y') {\n          if (this.currentScrollLock) {\n            const scrollableAmount = this.currentScrollLockElement.scrollHeight - this.currentScrollLockElement.offsetHeight;\n            const hittingTop = this.currentScrollLockElement.scrollTop <= 0;\n            const hittingBottom = this.currentScrollLockElement.scrollTop >= scrollableAmount;\n\n            if (\n              (hittingTop && positionDelta > 0) ||\n              (hittingBottom && positionDelta < 0)\n            ) {\n              this.currentScrollLockElement.style.overflowY = 'hidden';\n              this.currentScrollLock = false;\n            } else if (!hittingBottom && !hittingTop) {\n              cancelMotion = true;\n            }\n          }\n        }\n\n        if (!this.currentScrollLock) { // this is so we don't start moving until we know for sure we should\n          this[`position${axis}`] += positionDelta;\n          const newVelocity = toMeters(positionDelta, scale) / timeDelta;\n          const velocityDelta = newVelocity - this[axis].velocity;\n          this[axis].velocity = newVelocity;\n          this[axis].acceleration = velocityDelta / timeDelta;\n        }\n      } else {\n        this[`position${axis}`] += toPixels(this[axis].velocity * timeDelta, scale);\n\n        let frictionForce = friction * (mass * gravity) * (this[axis].velocity > 0 ? -1 : 1);\n        frictionForce *= (isNaN(axisCoefficients[axis])) ? 0 : axisCoefficients[axis]; // friction is inline with vector magnitude, so we need to adjust\n\n        const forces = [frictionForce]; // friction is always a thing\n\n        if (this[axis].hittingMax || (this[axis].velocity >= 0 && this[axis].position > this.maxEdge[axis])) {\n          if (!this[axis].hittingMax) this.callBoundaryCallbacks(`${axis}-max`);\n          this[axis].hittingMax = true;\n          forces.push(this.surface.options.boundarySpring * (this.maxEdge[axis] - this[axis].position)); // force of spring\n        }\n\n        if (this[axis].hittingMin || (this[axis].velocity <= 0 && this[axis].position < this.minEdge[axis])) {\n          if (!this[axis].hittingMin) this.callBoundaryCallbacks(`${axis}-min`);\n          this[axis].hittingMin = true;\n          forces.push(this.surface.options.boundarySpring * (this.minEdge[axis] - this[axis].position)); // force of spring\n        }\n\n        if (this[axis].hittingMin || this[axis].hittingMax) forces.push(this.surface.options.boundarySpringDamping * -this[axis].velocity); // force of damper\n\n        this[axis].acceleration = forces.reduce((sum, x) => sum + x, 0) / mass;\n        const newVelocity = this[axis].velocity + (this[axis].acceleration * timeDelta);\n\n        if (this[axis].hittingMin || this[axis].hittingMax) {\n          this[axis].previousDisplacements.push(\n            Math.abs(this[axis].hittingMax\n              ? this[axis].position - this.maxEdge[axis]\n              : this.minEdge[axis] - this[axis].position\n            )\n          );\n        }\n\n        this[axis].velocity = newVelocity * this[axis].velocity <= 0 && !(this[axis].hittingMin || this[axis].hittingMax) ? 0 : newVelocity;\n\n        if (this[axis].previousDisplacements.length >= 5) {\n          let min: number = Infinity;\n          let max: number = -Infinity;\n\n          for (let i = this[axis].previousDisplacements.length - 1; i >= this[axis].previousDisplacements.length - 6; i--) {\n            let dis = this[axis].previousDisplacements[i];\n            if (dis > max) max = dis;\n            if (dis < min) min = dis;\n          }\n\n          if (max - min < 1) {\n            this[axis].velocity = 0;\n            // set position exactly as it should be on the limit\n            this[`position${axis}`] = this[axis].hittingMax ? this.maxEdge[axis] : this.minEdge[axis];\n          }\n        }\n\n        if (this[axis].velocity === 0) this[axis].settled = true;\n      }\n    });\n\n    if (cancelMotion) {\n      app.endMove(undefined, true);\n    }\n  }\n\n  onPositionChange(fn: ((details: PositionDetails) => void)): void {\n    this.positionCallbacks.push(fn);\n    this.callPositionCallbacks();\n  }\n\n  // add a callback to be called when a boundary is hit\n  onBoundaryContact(boundary: Boundary, fn: (() => void)): void {\n    this.boundaryCallbacks[boundary].push(fn);\n  }\n\n  // internal funcs\n\n  callBoundaryCallbacks(boundary: Boundary): void {\n    this.boundaryCallbacks[boundary].forEach((fn: (() => void)): void => fn());\n  }\n\n  callPositionCallbacks() {\n    const x = this.x.position;\n    const y = this.y.position;\n    const xd = this.maxEdge.x - this.minEdge.x;\n    const yd = this.maxEdge.y - this.minEdge.y;\n    this.positionCallbacks.forEach((fn: ((details: PositionDetails) => void)) => fn({x, y, xp: (x - this.minEdge.x) / xd, yp: (y - this.minEdge.y) / yd}));\n  }\n}\n"],"names":[],"mappings":"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"}